{"version":3,"sources":["js/back-to-top-btn.js","js/api/api-service.js","index.js"],"names":["goTopBtn","document","querySelector","window","addEventListener","trackScroll","scrolled","pageYOffset","coords","documentElement","clientHeight","classList","add","remove","backToTop","scrollBy","setTimeout","BASE_URL","API_KEY","MoviesApiService","constructor","searchQuery","page","fetchPopularMovies","searchParams","URLSearchParams","api_key","fetch","then","response","json","fetchGenresList","fetchMoviesBySearch","query","fetchFullInfoOfMovie","movieId","fetchMoviesByGenre","genreId","with_genres","incrementPage","resetPage","setPage","value","newQuery"],"mappings":";;;AAwBC,aAxBc,SAAY,IAoBrBA,IAAAA,EAAWC,SAASC,cAAc,gBAEtCC,OAAOC,iBAAiB,SArBfC,WACHC,IAAAA,EAAWH,OAAOI,YAClBC,EAASP,SAASQ,gBAAgBC,aAElCJ,EAAWE,GACbR,EAASW,UAAUC,IAAI,oBAErBN,EAAWE,GACbR,EAASW,UAAUE,OAAO,sBAc9Bb,EAASI,iBAAiB,QAVjBU,SAAAA,IACHX,OAAOI,YAAc,IACvBJ,OAAOY,SAAS,GAAI,IACpBC,WAAWF,EAAW,MAQ3B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACnBqC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EALtC,MAAMG,EAAY,+BACZC,EAAW,mCAIF,MAAMC,EACnBC,cACOC,KAAAA,YAAc,GACdC,KAAAA,KAAO,EAGdC,qBACQC,MAAAA,EAAe,IAAIC,gBAAgB,CACvCC,QAASR,EACTI,KAAM,KAAKA,OAKNK,OAAAA,SAFQV,kBAAyBO,KAEtBI,KAAKC,GAAYA,EAASC,QAG9CC,kBACQP,MAAAA,EAAe,IAAIC,gBAAgB,CACvCC,QAASR,IAKJS,OAAAA,SAFQV,sBAA6BO,KAE1BI,KAAKC,GAAYA,EAASC,QAI9CE,sBACQR,MAAAA,EAAe,IAAIC,gBAAgB,CACvCC,QAASR,EACTe,MAAO,KAAKZ,YACZC,KAAM,KAAKA,OAGNK,OAAAA,SAASV,iBAAwBO,KAAgBI,KAAKC,GAAYA,EAASC,QAGpFI,qBAAqBC,GACbX,MAAAA,EAAe,IAAIC,gBAAgB,CACvCC,QAASR,IAGJS,OAAAA,SAASV,WAAkBkB,KAAWX,KAAgBI,KAAKC,GAAYA,EAASC,QAGzFM,mBAAmBC,GACXb,MAAAA,EAAe,IAAIC,gBAAgB,CACvCC,QAASR,EACToB,YAAaD,IAGRV,OAAAA,SAASV,mBAA0BO,KAAgBI,KAAKC,GAAYA,EAASC,QAGtFS,gBACOjB,KAAAA,MAAQ,EAGfkB,YACOlB,KAAAA,KAAO,EAGdmB,QAAQC,GACDpB,KAAAA,KAAOoB,EAGVT,YACK,OAAA,KAAKZ,YAGVY,UAAMU,GACHtB,KAAAA,YAAcsB,GAxEe,QAAA,QAAA;;ACAtC,aALA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,yBAGA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IADA,EAAA,EAAA,YACA,EAAA,EAAA","file":"src.1de72f11.js","sourceRoot":"../src","sourcesContent":["export default function () {\n  function trackScroll() {\n    var scrolled = window.pageYOffset;\n    var coords = document.documentElement.clientHeight;\n\n    if (scrolled > coords) {\n      goTopBtn.classList.add('back_to_top-show');\n    }\n    if (scrolled < coords) {\n      goTopBtn.classList.remove('back_to_top-show');\n    }\n  }\n\n  function backToTop() {\n    if (window.pageYOffset > 0) {\n      window.scrollBy(0, -80);\n      setTimeout(backToTop, 0);\n    }\n  }\n\n  var goTopBtn = document.querySelector('.back_to_top');\n\n  window.addEventListener('scroll', trackScroll);\n  goTopBtn.addEventListener('click', backToTop);\n}\n","const BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `3d673b2d8e40eafc68577fae5a6a1f4b`;\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport default class MoviesApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchPopularMovies() {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: this.page,\n    });\n\n    const url = `${BASE_URL}movie/popular?${searchParams}`;\n\n    return fetch(url).then(response => response.json());\n  }\n\n  fetchGenresList() {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    const url = `${BASE_URL}/genre/movie/list?${searchParams}`;\n\n    return fetch(url).then(response => response.json());\n  }\n\n  // fetchMoviesBySearchQuery\n  fetchMoviesBySearch() {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      query: this.searchQuery,\n      page: this.page,\n    });\n\n    return fetch(`${BASE_URL}search/movie?${searchParams}`).then(response => response.json());\n  }\n\n  fetchFullInfoOfMovie(movieId) {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return fetch(`${BASE_URL}/movie/${movieId}?${searchParams}`).then(response => response.json());\n  }\n\n  fetchMoviesByGenre(genreId) {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      with_genres: genreId,\n    });\n\n    return fetch(`${BASE_URL}discover/movie?${searchParams}`).then(response => response.json());\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  setPage(value) {\n    this.page = value;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","import './sass/main.scss';\nimport backToTopBtn from './js/back-to-top-btn';\nimport API from './js/api/api-service';\n// =========== back-to-top-button\nbackToTopBtn();\nAPI();\n"]}